---
title: 日本語への翻訳
author: aterai
pubdate: 2010-10-05
description: Java クラスドキュメントで、修正した方が良さそうな日本語訳など。
---
* 概要 [#summary]
`Java`(`Swing`)のクラスドキュメントで、修正した方が良さそうな日本語訳などをメモしています。

#contents

* 未修正 [#Unresolved]
** 見つかった場合は、null [#l0d07bf2]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#getUnwrappedView-javax.swing.JViewport- SwingUtilities#getUnwrappedView(...)]
-- そのような子孫が見つかった場合は、nullを返します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#getUnwrappedView-javax.swing.JViewport- SwingUtilities#getUnwrappedView(...)]
-- If such a descendant can not be found, null is returned.
- 修正案
-- そのような子孫が見つからない場合は、null を返します。
- メモ
-- 意味が逆になっている

** ノードハンドルを表示するかどうか [#sc591723]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JTree.html#setShowsRootHandles-boolean- JTree#setShowsRootHandles(boolean)]
-- newValue - ルートハンドルを表示しない場合は true、そうでない場合はfalse
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTree.html#setShowsRootHandles-boolean- JTree#setShowsRootHandles(boolean)]
-- newValue - true if root handles should be displayed; otherwise, false
- 変更案
-- newValue - ルートハンドルを表示する場合は true、そうでない場合はfalse
- メモ
-- ルートノードのノードハンドル(`WindowsLookAndFeel`の場合は`+`,`-`アイコン)を表示するかどうかが、逆の意味に誤翻訳されている

** クリップボード転送 [#efb8a224]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/awt/image/RescaleOp.html RescaleOp]
-- 計算で求められたサンプル値は、転送先イメージの最小および最大にクリップボード転送されます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/image/RescaleOp.html RescaleOp]
-- The scaled sample values are clipped to the minimum/maximum representable in the destination image.
- 変更案
-- 計算で求められたサンプル値は、転送先イメージの最小および最大でクリップされます。
-- スケーリングされたサンプル値は、転送先のイメージで表示できる最小、最大値で切り詰められます。
- メモ
-- `clipped to the minimum/maximum`は、`int clip(int num, int min, int max) { return Math.max(min, Math.min(num, max)); }`の意味で、クリップボード転送は無関係のはず

** Cover method [#b1dfbe10]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#paintComponent-java.awt.Graphics-java.awt.Component-java.awt.Container-java.awt.Rectangle- SwingUtilities#paintComponent(...)]
-- 詳細は、このメソッドを参照してください。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#paintComponent-java.awt.Graphics-java.awt.Component-java.awt.Container-java.awt.Rectangle- SwingUtilities#paintComponent(...)]
-- Refer to it for more information.
- 変更案
-- 詳細は、そちらのメソッドを参照してください。

** HyperlinkEvent.EventType [#v8e9a75b]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/event/HyperlinkEvent.EventType.html HyperlinkEvent.EventType]
-- ENTERED 入力されたことを示すタイプです。
-- EXITED 終了したことを示すタイプです。
-- ACTIVATED アクティブになっていることを示すタイプです。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/event/HyperlinkEvent.EventType.html HyperlinkEvent.EventType]
-- ENTERED Entered type.
-- EXITED Exited type.
-- ACTIVATED Activated type.
- 変更案
-- ENTERED (リンクに)入ったことを示すタイプです。
-- EXITED (リンクから)出たことを示すタイプです。
-- ACTIVATED (リンクが)起動したことを示すタイプです。

** このメソッドは推奨されません。 [#g401f3aa]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/DefaultListModel.html#getElementAt-int- DefaultListModel#getElementAt(int)]
-- 注: このメソッドは推奨されません。推奨されるメソッドはget(int)です。これは1.2のCollections Frameworkで定義されたListインタフェースを実装します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/DefaultListModel.html#getElementAt-int- DefaultListModel#getElementAt(int)]
-- Note: Although this method is not deprecated, the preferred method to use is get(int), which implements the List interface defined in the 1.2 Collections framework. 
- 変更案
-- 推奨されるメソッドはget(int)ですが、このメソッドは非推奨ではありません。これは1.2のCollections Frameworkで定義されたListインタフェースを実装します。
- メモ
-- `get(int)`の方が好ましいが、`getElementAt(int)`は非推奨ではない(`@deprecated`はついていない)ので、コンパイラで警告されることもないようだ
-- 「これは1.2のCollections Frameworkで定義されたListインタフェースを実装します。」も意味がよく分からない...

** 拡大縮小しているときに行う削除や追加 [#r1834970]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/text/Highlighter.html#changeHighlight-java.lang.Object-int-int- Highlighter#changeHighlight(...)]
-- このメソッドは、変更対象だけを扱って選択範囲を拡大縮小しているとき (マウスのドラッグ操作など) に行う削除や追加よりも効率的です。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/text/Highlighter.html#changeHighlight-java.lang.Object-int-int- Highlighter#changeHighlight(...)]
-- This may be more efficient than a remove/add when a selection is expanding/shrinking (such as a sweep with a mouse) by damaging only what changed.
- 変更案
-- このメソッドは、変更対象が選択範囲の拡大縮小(マウスのドラッグ操作など)だけのとき、削除や追加を行うよりも効率的です。

** そうでない場合は [#t4f1d21f]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/RowFilter.html#regexFilter-java.lang.String-int...- RowFilter#regexFilter(...)]
-- そうでない場合は、指定されたすべての値が評価される
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/RowFilter.html#regexFilter-java.lang.String-int...- RowFilter#regexFilter(...)]
-- If not supplied all values are evaluated
- 変更案
-- 指定しない場合、すべての値が評価される

** 追加することができます [#ua7619df]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/undo/UndoManager.html UndoManager]
-- 次のコード例では、UndoManager を作成し、UndoableEditListener として JTextField に追加することができます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/undo/UndoManager.html UndoManager]
-- The following examples creates an UndoManager and adds it as an UndoableEditListener to a JTextField:
- 変更案
-- 次のコード例では、UndoManager を作成し、これを UndoableEditListener として JTextField に追加しています。

** scrollRectToVisible と、指定されたセルの境界 [#y8118367]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JList.html#ensureIndexIsVisible-int- JList#ensureIndexIsVisible(int)]
-- この処理により、scrollRectToVisible と、指定されたセルの境界が呼び出されます。このメソッドを有効にするには、JList が JViewport 内に存在する必要があります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JList.html#ensureIndexIsVisible-int- JList#ensureIndexIsVisible(int)]
-- This calls scrollRectToVisible with the bounds of the specified cell. For this method to work, the JList must be within a JViewport.
- 変更案
-- これは、指定されたセルの境界を引数にして、scrollRectToVisibleメソッドを呼びます。JList が JViewport 内に存在する場合のみ、このメソッドは有効です。

** 選択モードの設定 [#o36ae340]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/tree/TreeSelectionModel.html#setSelectionMode-int- TreeSelectionModel#setSelectionMode(int)]
-- 現在の選択範囲が新しいモードに対して有効でない場合は選択範囲を変更できます。
-- たとえば、モードが SINGLE_TREE_SELECTION に変更したときに 3 つの TreePath が選択された場合、一つの TreePath だけを選択できます。
-- どの TreePath を選択するかは使用する特定の実装によって決まります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/tree/TreeSelectionModel.html#setSelectionMode-int- TreeSelectionModel#setSelectionMode(int)]
-- This may change the selection if the current selection is not valid for the new mode.
-- For example, if three TreePaths are selected when the mode is changed to SINGLE_TREE_SELECTION, only one TreePath will remain selected.
-- It is up to the particular implementation to decide what TreePath remains selected.
- 変更案
-- 現在の選択範囲が新しいモードに対して有効でない場合、選択範囲は変更されます。
-- たとえば、3 つの TreePath が選択された状態でモードを SINGLE_TREE_SELECTION に変更した場合、一つの TreePath の選択だけが残ります。
-- たとえば、モードを SINGLE_TREE_SELECTION に変更したときに 3 つの TreePath が選択されていた場合、一つの TreePath の選択状態だけが残されます。
-- どの TreePath が選択されたままになるかは使用する特定の実装によって決まります。

** DefaultTableCellRendererの「実装上の注意」 [#gb59ef4b]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/table/DefaultTableCellRenderer.html#override DefaultTableCellRenderer]
-- そのため、このクラスでは、validate、invalidate、revalidate、repaint、およびfirePropertyChangeの各メソッドは無操作になるようにオーバーライドされ、isOpaqueメソッドのみがパフォーマンスを向上させるためにオーバーライドされます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/table/DefaultTableCellRenderer.html#override DefaultTableCellRenderer]
-- So this class overrides the validate, invalidate, revalidate, repaint, and firePropertyChange methods to be no-ops and override the isOpaque method solely to improve performance.
- 変更案
-- そのため、このクラスは、 validate、invalidate、revalidate、repaint および firePropertyChange メソッドを何もしないようにオーバーライドし、単にパフォーマンスを向上させるために isOpaque メソッドをオーバーライドします。
- メモ
-- `firePropertyChange(String propertyName, boolean oldValue, boolean newValue)`は、何もしないようにオーバーライドされるけど、`firePropertyChange(String propertyName, Object oldValue, Object newValue)`は、完全に何もしないようにはならない？

** SwingUtilities.calculateInnerArea(...) [#calculateInnerArea]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- r - 変更されるRectangleのインスタンス。null
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- r - the Rectangle instance to be modified; may be null
- 変更案
-- r - 変更されるRectangleのインスタンス。nullを許容する
- メモ:
-- nullだけでは意味不明

** JFormattedTextField により、 [#e5f1cea2]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JFormattedTextField.html JFormattedTextField]
-- JFormattedTextField により、フォーカスが失われた場合に実行するアクションの設定が可能になります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JFormattedTextField.html JFormattedTextField]
-- JFormattedTextField allows configuring what action should be taken when focus is lost.
- 変更案
-- JFormattedTextField が、フォーカスを失ったときに実行するアクションを設定できます。

** JFormattedTextField により、その2 [#s3e659c5]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JFormattedTextField.html JFormattedTextField]
-- JFormattedTextField により、現在編集中の値が不正な場合でもフォーカスは移動が可能になります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JFormattedTextField.html JFormattedTextField]
-- JFormattedTextField allows the focus to leave, even if the currently edited value is invalid.
- 変更案
-- JFormattedTextField は、現在編集中の値が不正な場合でも、フォーカスの移動が可能です。

** Desktop フォルダになります。 [#c1db2cf1]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/filechooser/FileSystemView.html#isParent-java.io.File-java.io.File- FileSystemView#isParent(...)]
-- たとえば、フォルダは file.getParentFile() とは異なる Desktop フォルダになります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/filechooser/FileSystemView.html#isParent-java.io.File-java.io.File- FileSystemView#isParent(...)]
-- Folder could for example be the "Desktop" folder which is not the same as file.getParentFile().
- 変更案???
-- たとえば、folder が「デスクトップ」フォルダで、file.getParentFile() とは同じにならない場合があります。

** 'g' (ラテン小文字のG)が文字の例としてあげられます。 [#g6de2419]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/awt/Font.html Font]
-- 'g' (ラテン小文字のG)が文字の例としてあげられます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/Font.html Font]
-- For example, 'g', LATIN SMALL LETTER G, is a character.
- 変更案
-- 例えば、「g」 (ラテン小文字の G) は文字です。

** 実装可能な？ [#t6b126fd]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/CellEditor.html CellEditor]
-- すべての汎用エディタが実装可能なメソッドを定義します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/CellEditor.html CellEditor]
-- This interface defines the methods any general editor should be able to implement.

** 通常の使い方では、 [#f9d10277]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/awt/GraphicsEnvironment.html#getAllFonts-- GraphicsEnvironment#getAllFonts()]
-- 通常の使い方では、ユーザーは特定のフォントを選択できます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/GraphicsEnvironment.html#getAllFonts-- GraphicsEnvironment#getAllFonts()]
-- Typical usage would be to allow a user to select a particular font.
- 変更案
-- ユーザーに特定のフォントを選択させる場合に、よく使用されます。

** リスト選択の変更を待機する方法 [#l222135f]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JList.html JList]
-- リスト選択の変更を待機する方法としては、JList に直接 ListSelectionListener を追加することをお勧めします。すると、JList が選択モデルの変更を待機し、変更があった場合にリスナーに通知を送るようになります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JList.html JList]
-- The preferred way to listen for changes in list selection is to add ListSelectionListeners directly to the JList. JList then takes care of listening to the the selection model and notifying your listeners of change.
- 変更案
-- リスト選択の変更を監視する方法としては、JListに直接 ListSelectionListener を追加することをお勧めします。すると、JList が選択モデルの変更を監視し、変更を各リスナーに通知するようになります。

** 可能な場所であればどこでも、 [#q0170e61]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/BorderFactory.html BorderFactory]
-- このファクトリは、可能な場所であればどこでも、共有された Border インスタンスへの参照を分配します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/BorderFactory.html BorderFactory]
-- Wherever possible, this factory will hand out references to shared Border instances.
- 変更案
-- 可能な限り、このファクトリは共有された Border インスタンスへの参照を渡します。

** 整列できます。 [#ee1172f3]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JSplitPane.html JSplitPane]
-- 2 つの Component は、JSplitPane.HORIZONTAL_SPLIT を使って左右に、JSplitPane.VERTICAL_SPLIT を使って上下に整列できます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JSplitPane.html JSplitPane]
-- The two Components in a split pane can be aligned left to right using JSplitPane.HORIZONTAL_SPLIT, or top to bottom using JSplitPane.VERTICAL_SPLIT.
- 変更案
-- 分割区画内の二つのコンポーネントは、JSplitPane.HORIZONTAL_SPLIT を使って左右に、JSplitPane.VERTICAL_SPLIT を使って上下に並べることができます。

** 含まれるコンポーネントは指定されます。 [#f95b80b7]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container) LayoutManager#preferredLayoutSize(...) (Java Platform SE 6)]
-- 指定されたコンテナの推奨サイズの寸法を計算します。含まれるコンポーネントは指定されます。
- 英語: [https://docs.oracle.com/javase/6/docs/api/java/awt/LayoutManager.html#preferredLayoutSize(java.awt.Container) LayoutManager#preferredLayoutSize(...) (Java Platform SE 6)]
-- Calculates the preferred size dimensions for the specified container, given the components it contains.
- 変更案
-- 指定されたコンテナ(...)の推奨サイズの寸法を計算します。

** あとで [#p593531c]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/awt/Window.html#setMinimumSize-java.awt.Dimension- Window#setMinimumSize(Dimension)]
-- あとで setMinimumSize で指定された幅または高さよりも小さい状態で setSize メソッドまたは setBounds メソッドが呼び出されると、ウィンドウは minimumSize の値に合わせて自動的に大きくなります。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html#setMinimumSize-java.awt.Dimension- Window#setMinimumSize(Dimension)]
-- If the setSize or setBounds methods are called afterwards with a width or height less than that specified by setMinimumSize the window is automatically enlarged to honor the minimumSize value.
- 変更案
-- setMinimumSize で指定された幅、または高さよりも小さい状態で、 setSize メソッド、または setBounds メソッドが呼び出されると、ウィンドウは minimumSize の値に合わせて自動的に大きくなります。
- メモ
-- 「あとで」は、無くても良さそう

** point が存在する場合 [#f63aea30]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JTable.html#rowAtPoint-java.awt.Point- JTable#rowAtPoint(Point)]
-- point が存在する場合はその行のインデックス、結果が [0, getRowCount()-1] の範囲内にない場合は -1 を返します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTable.html#rowAtPoint-java.awt.Point- JTable#rowAtPoint(Point)]
-- Returns the index of the row that point lies in, or -1 if the result is not in the range [0, getRowCount()-1].
- 変更案
-- point がある行のインデックスを返します。もし、その結果が [0, getRowCount()-1] の範囲内にない場合は -1 を返します。

** performance、操作 [#hb7eea2c]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/util/EnumSet.html EnumSet]
-- このクラスの操作に必要な領域や時間は、従来のintベースの「ビット・フラグ」に対する高品質かつ型保証された代替として十分に使用可能です。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/util/EnumSet.html EnumSet]
-- The space and time performance of this class should be good enough to allow its use as a high-quality, typesafe alternative to traditional int-based "bit flags."
- 変更案
-- このクラスの領域や時間性能(パフォーマンス)は、従来の int ベースの「ビット・フラグ」と比較しても十分に高品質で、型保証された代替として使用可能です。

** アクセラレータの正しい文字 [#w8a3335d]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/java/awt/Toolkit.html#getMenuShortcutKeyMask-- Toolkit#getMenuShortcutKeyMask()]
-- Control キーがアクセラレータの正しい文字でない場合、ツールキットの実装はこのメソッドをオーバーライドします。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/Toolkit.html#getMenuShortcutKeyMask-- Toolkit#getMenuShortcutKeyMask()]
-- Toolkit implementations should override this method if the Control key isn't the correct key for accelerators.
- 変更案
-- Control キーがアクセラレータキーでない場合、ツールキットの実装はこのメソッドをオーバーライドする必要があります。

** JEditorPane#scrollToReference(String) [#ub637410]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/JEditorPane.html#scrollToReference-java.lang.String- JEditorPane#scrollToReference(String)]
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JEditorPane.html#scrollToReference-java.lang.String- JEditorPane#scrollToReference(String)]

-- デフォルトでは、このメソッドは HTMLDocument 内での参照位置を認識しているだけです。
-- By default, this method only knows how to locate a reference in an HTMLDocument.
--- デフォルトでは、このメソッドは HTMLDocument 内の参照位置を見つける方法だけ知っています。
--- デフォルトでは、このメソッドが参照位置を認識できるのは、HTMLDocument 内の場合だけです。

-- 実際のスクロール処理を実行するには、実装により scrollRectToVisible メソッドを呼び出します。
-- The implementation calls the scrollRectToVisible method to accomplish the actual scrolling.
--- 実装では、実際のスクロール処理を実行するために scrollRectToVisible メソッドを呼び出しています。

-- HTML 以外のドキュメント形式で参照位置へのスクロールが必要な場合は、このメソッドを再実装する必要があります。
-- If scrolling to a reference location is needed for document types other than HTML, this method should be reimplemented.
--- 参照位置へのスクロールが HTML 以外のドキュメント形式で必要な場合は、このメソッドを再実装する必要があります。

-- このメソッドは、コンポーネントが可視状態でない場合は無効です。
-- This method will have no effect if the component is not visible.
--- コンポーネントが可視状態でない場合、このメソッドは効果がありません。

- [https://bugs.openjdk.java.net/browse/JDK-8181640 JDK-8181640 Spelling mistake in javadoc: javax.swing.JEditorPane.scrollToReference(String) - Java Bug System]
-- URLに対するUL.getRefメソッド
--- Java 9、Java 10で`URL.getRef`に修正済み

** 括弧と読点 [#f274a1eb]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/ImageIcon.html#ImageIcon-java.lang.String- ImageIcon#ImageIcon(String)]
-- パスを指定するときは、区切り文字としてインターネット標準のスラッシュ (/) を使います。文字列は URL に変換され、スラッシュはすべてのシステムで使用されます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/ImageIcon.html#ImageIcon-java.lang.String- ImageIcon#ImageIcon(String)]
-- When specifying a path, use the Internet-standard forward-slash ("/") as a separator. (The string is converted to an URL, so the forward-slash works on all systems.)
- 変更案
-- パスを指定するときは、区切り文字としてインターネット標準のスラッシュ (/) を使います(文字列は URL に変換されるので、スラッシュはすべてのシステムで動作します)。

* 1.7.0で修正済み [#f5d9f622]
** 0 次の場合 [#mcd455bd]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JTree.html#rowHeight JTree#rowHeight]
-- 0 次の場合、レンダリングが各行の高さを決めます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTree.html#rowHeight JTree#rowHeight]
-- If this is <= 0 the renderer determines the height for each row.
- 変更案
-- 0 以下の場合、レンダリングが各行の高さを決めます。

** 親を基準にして位置を指定 [#h52d649a]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/Component.html#getBounds() Component#getBounds()]
-- 境界はこのコンポーネントの幅、高さ、および親を基準にして位置を指定します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/Component.html#getBounds-- Component#getBounds()]
--The bounds specify this component's width, height, and location relative to its parent.
- 変更案
-- 境界は、このコンポーネントの幅、高さ、および親からの相対位置を示します。
-- コンポーネントの幅、高さ、および親からの相対位置が境界になります。
-- 〃が境界として明示されます。

** ユーザーが入力した数値 [#bda2d0d2]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JOptionPane.html#getInputValue() JOptionPane#getInputValue()]
-- wantsInput が true の場合に、ユーザーが入力した数値を返します
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JOptionPane.html#getInputValue-- JOptionPane#getInputValue()]
-- Returns the value the user has input, if wantsInput is true.
- 変更案
-- wantsInput が true の場合に、ユーザーが入力した値を返します。
- メモ
-- 数値と読点

** setUpdateSelectionOnSort [#bcd916b8]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JTable.html#setUpdateSelectionOnSort(boolean) JTable#setUpdateSelectionOnSort(boolean)]
-- policy.allowSystemProperty プロパティーのデフォルト値は true です。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTable.html#setUpdateSelectionOnSort-boolean- JTable#setUpdateSelectionOnSort(boolean)]
-- The default is true.
- 変更案
-- デフォルト値は true です。
- メモ
-- 検索してみると、他でも大量に必要のない(英語版には存在しない)「policy.allowSystemProperty プロパティー」が出てくるので、自動変換時？のミスかも

** 閉じ括弧と訳、具象実装 (たとえば、TableRowSorter を参照します。 [#vdd5abc8]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/DefaultRowSorter.html DefaultRowSorter]
-- デフォルトの Comparator を検出するには、具象実装 (たとえば、TableRowSorter を参照します。
-- デフォルトではソートは行われず (モデルと同様)、列はソート可能です。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/DefaultRowSorter.html DefaultRowSorter]
-- To find the default Comparators, see the concrete implementation (for example, TableRowSorter).
-- The default sort order is unsorted (the same as the model), and columns are sortable by default.
- 変更案
-- デフォルトの Comparator を見つける場合は、具象実装 (たとえば、TableRowSorter) を参照してください。
-- デフォルトのソート順序は「ソートなし (モデルと同じ順序)」、また、各列は「ソート可能」がデフォルトです。

** コンポーネントがデータ転送処理をサポートしていない場合は null が返されます。 [#de5d864d]
- 日本語:  [https://docs.oracle.com/javase/jp/6/api/javax/swing/JComponent.html#setTransferHandler(javax.swing.TransferHandler) JComponent#setTransferHandler(...) (Java Platform SE 6)]
-- transferHandler プロパティーを設定します。コンポーネントがデータ転送処理をサポートしていない場合は null が返されます。
- 英語:  [https://docs.oracle.com/javase/6/docs/api/javax/swing/JComponent.html#setTransferHandler(javax.swing.TransferHandler) JComponent#setTransferHandler(...) (Java Platform SE 6)]
-- Sets the transferHandler property, which is null if the component does not support data transfer operations.
- 変更案
-- transferHandler プロパティーを設定します(コンポーネントがデータ転送処理をサポートしない場合は、null を設定する)。

** コロンが抜けている？ [#ac6b496c]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/Window.html Window]
-- ウィンドウは、WindowEvents、WindowOpened、WindowClosed、WindowGainedFocus および WindowLostFocus を生成することができます。
- 英語: [https://docs.oracle.com/javase/8/docs/api/java/awt/Window.html Window]
-- Windows are capable of generating the following WindowEvents: WindowOpened, WindowClosed, WindowGainedFocus, WindowLostFocus.
- 変更案
-- ウィンドウは、以下のウィンドウイベントを生成できます: WindowOpened、WindowClosed、WindowGainedFocus、WindowLostFocus
-- ウィンドウは、WindowOpened、WindowClosed、WindowGainedFocus、および WindowLostFocus の WindowEvents を生成できます。
- メモ
-- `java.awt.Dialog`は、以下のようになっている
-- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/Dialog.html Dialog]
--- ダイアログは、WindowOpened、WindowClosing、WindowClosed、WindowActivated、WindowDeactivated、WindowGainedFocus、および WindowLostFocus の WindowEvents を生成できます。
--- Dialogs are capable of generating the following WindowEvents: WindowOpened, WindowClosing, WindowClosed, WindowActivated, WindowDeactivated, WindowGainedFocus, WindowLostFocus.
-- `java.awt.Frame`は、以下のようになっている
-- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/Frame.html Frame]
--- フレームは次の型の WindowEvent を生成できます。
--- Frames are capable of generating the following types of WindowEvents:

** コロンのあとに例(数値)が重複して現れる [#uf0f875c]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JSlider.html#getMinorTickSpacing() JSlider#getMinorTickSpacing()]
-- 範囲が 0 ～ 50 のスライダで、小目盛りの間隔が 10 に設定されている場合は、0、10、20、30、40、50 の値の横に小目盛りが付けられます。0, 10, 20, 30, 40, 50.
- 英語: [https://docs.oracle.com/javase/6/docs/api/javax/swing/JSlider.html#getMinorTickSpacing() JSlider#getMinorTickSpacing()]
-- If you have a slider with a range from 0 to 50 and the minor tick spacing is set to 10, you will get minor ticks next to the following values: 0, 10, 20, 30, 40, 50.
- メモ
-- `setMinorTickSpacing`, `setMajorTickSpacing`, `getMajorTickSpacing`なども同様。

** 最後のサイズ変更できない Cursor [#vc4ce4ee]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JInternalFrame.html#getLastCursor() JInternalFrame#getLastCursor()]
-- setCursor メソッドによって設定された、サイズ変更できない最後の Cursor を返します。
-- 最後のサイズ変更できない Cursor
- 英語: [https://docs.oracle.com/javase/6/docs/api/javax/swing/JInternalFrame.html#getLastCursor() JInternalFrame#getLastCursor()]
-- Returns the last Cursor that was set by the setCursor method that is not a resizable Cursor.
-- the last non-resizable Cursor
- 変更案
-- setCursor メソッドによって設定された、最後の Cursor (サイズ変更用のCursorは除く)を返します。
--最後の Cursor (サイズ変更用を除く)
- メモ
-- ソースをみると、タイプが`Cursor.SW_RESIZE_CURSOR`, ... などではないことが条件になっている

#code{{
public void setCursor(Cursor cursor) {
    if (cursor == null) {
        lastCursor = null;
        super.setCursor(cursor);
        return;
    }
    int type = cursor.getType();
    if (!(type == Cursor.SW_RESIZE_CURSOR  ||
          type == Cursor.SE_RESIZE_CURSOR  ||
          type == Cursor.NW_RESIZE_CURSOR  ||
          type == Cursor.NE_RESIZE_CURSOR  ||
          type == Cursor.N_RESIZE_CURSOR   ||
          type == Cursor.S_RESIZE_CURSOR   ||
          type == Cursor.W_RESIZE_CURSOR   ||
          type == Cursor.E_RESIZE_CURSOR)) {
        lastCursor = cursor;
    }
    super.setCursor(cursor);
}
}}

** JPasswordField と JTextField [#zc2c325b]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/package-summary.html javax.swing (Java Platform SE 6)]
-- JPasswordField は、1 行のテキストの編集を可能にする、軽量コンポーネントです。
-- JTextField は、1 行のテキストの編集を可能にする軽量コンポーネントです。
- 英語: [https://docs.oracle.com/javase/6/docs/api/javax/swing/package-summary.html javax.swing (Java Platform SE 6)]
-- JPasswordField is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters.
-- JTextField is a lightweight component that allows the editing of a single line of text.
- メモ
-- `JPasswordField`の説明が途中で途切れて、`JTextField`の説明とほぼ同じになっている？

** 他は「copy」などのようにカギ括弧なのに、ここだけ、"link"？ [#n5f38393]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/TransferHandler.html#LINK TransferHandler.html#LINK]
-- "link" の転送アクションを表す int です。

** 例を示します。 [#qbfbcc48]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/JTable.html JTable]
-- RowSorter を直接設定します。例を示します。table.setRowSorter(new TableRowSorter(model)).
-- autoCreateRowSorter プロパティーを true に設定し、JTable が自動的に RowSorter を作成するようにします。例を示します。setAutoCreateRowSorter(true).
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTable.html JTable]
-- Directly set the RowSorter. For example: table.setRowSorter(new TableRowSorter(model)).
-- Set the autoCreateRowSorter property to true, so that the JTable creates a RowSorter for you. For example: setAutoCreateRowSorter(true).
- 変更案
-- RowSorter を直接設定します。例: table.setRowSorter(new TableRowSorter(model));
-- autoCreateRowSorter プロパティーを true に設定し、JTable が自動的に RowSorter を作成するようにします。例: table.setAutoCreateRowSorter(true);

// ** インタフェース Comparable<T> [#ieb7aac0]
// - https://docs.oracle.com/javase/jp/6/api/java/lang/Comparable.html
// - https://docs.oracle.com/javase/jp/1.5.0/api/java/lang/Comparable.html

* 1.8.0で修正済み [#j5f1dec1]
** セキュリティーマネージャー、セキュリティマネージャ、セキュリティマネージャー [#q5d049c2]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/lang/Thread.html#getAllStackTraces() Thread#getAllStackTraces()]
-- セキュリティーマネージャー
- 英語: [https://docs.oracle.com/javase/jp/6/api/java/lang/Thread.html#getContextClassLoader() Thread#getAllStackTraces()]
-- セキュリティマネージャ

検索すると両方大量にあるみたい。導入されたバージョンで、ルールが異なる？と思ったけど、同じ 1.5 でもセキュリティマネージャーがある。

- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/awt/MouseInfo.html MouseInfo]
-- セキュリティマネージャー

%%統一するとしたら、セキュリティマネージャー？%%
追記: 1.8.0で、セキュリティ・マネージャに統一された。

** ユーザードロップアクション と ユーザドロップアクション [#ac8f2573]
- [https://docs.oracle.com/javase/jp/6/api/javax/swing/TransferHandler.TransferSupport.html TransferHandler.TransferSupport]
-- ユーザードロップアクション
- [https://docs.oracle.com/javase/jp/6/api/java/awt/dnd/DropTargetDragEvent.html DropTargetDragEvent]
- [https://docs.oracle.com/javase/jp/6/api/java/awt/dnd/DropTargetDropEvent.html DropTargetDropEvent]
-- ユーザドロップアクション

1.8.0では、ユーザー・ドロップ・アクションに統一されている

** Text、Number [#i4a44f68]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/java/text/SimpleDateFormat.html SimpleDateFormat]
-- Text
-- Number
- 変更案
-- テキスト
-- 数値

Year、Month、General time zone などは年、月、一般的なタイムゾーンになっているし、リンク先もテキスト、数値になっているので揃えたほうがいいかも。

** SwingUtilities#calculateInnerArea(...) [#o688ded1]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- r 内で指定されたコンポーネントの内部ペイント領域の位置とサイズを格納し、r を返します。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- Stores the position and size of the inner painting area of the specified component in r and returns r.
- 変更案
-- 指定されたコンポーネントの内部ペイント領域の位置とサイズを r に格納し、r を返します。

** すべての親を展開し常に非表示にする [#sb661101]
- 日本語: [https://docs.oracle.com/javase/jp/7/api/javax/swing/JTree.html#setExpandsSelectedPaths(boolean) JTree#setExpandsSelectedPaths(boolean)]
-- true の場合には、TreeSelectionModel または JTree が提供するカバーメソッドによりいつでも選択を変更でき、TreePath の親が展開され可視になります。 可視とは、JTree の可視矩形にかぎらず親パスが展開されている状態を意味します。
-- false の場合、ノード選択を変更すると親はすべて展開されても可視にはなりません。選択モデルのパスを、すべての親を展開し常に非表示にする場合には便利です。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/JTree.html#setExpandsSelectedPaths-boolean- JTree#setExpandsSelectedPaths(boolean)]
-- If true, any time the selection is changed, either via the TreeSelectionModel, or the cover methods provided by JTree, the TreePaths parents will be expanded to make them visible (visible meaning the parent path is expanded, not necessarily in the visible rectangle of the JTree).
-- If false, when the selection changes the nodes parent is not made visible (all its parents expanded). This is useful if you wish to have your selection model maintain paths that are not always visible (all parents expanded).
- 変更案
-- true の場合、TreeSelectionModel または JTree が提供するカバーメソッドで選択が変更されると、その TreePath の親が展開されて選択ノードが可視状態になります。可視とは、JTree の可視矩形にかぎらず親パスが展開されている状態を意味します。
-- false の場合、ノード選択を変更しても親は可視(すべての親が展開された状態)にはなりません。選択モデルでパスを常に非表示(すべての親が折りたたまれた状態)にしておきたい場合には便利です。

Java 1.8.0では括弧()が使用されて分かりやすくなっている。

** CSS プロパティー [#j45beda9]
- 日本語: [https://docs.oracle.com/javase/jp/6/api/javax/swing/text/html/CSS.html CSS]
-- バックグラウンド位置
-- バックグラウンド
-- テキスト装飾 (点滅やオーバーラインの例外を含む)
-- 垂直配置 (スーパークラスだけ)
-- テキストの配置 (中央揃え)
-- 上部マージン
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/text/html/CSS.html CSS]
-- background-position
-- background
-- text-decoration (with the exception of blink and overline)
-- vertical-align (only sup and super)
-- text-align (justify is treated as center)
-- margin-top
- メモ
-- プロパティーが翻訳されてしまうのは`1.7.0`で修正されたが、`text-align`の`(justify is treated as center)`が、「中央揃え」だけになるのは省略しすぎだと思う

* Java 11で修正済 [#d2489d64]
** (イン・セット)の位置 [#kdf7f533]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- 位置とサイズは、コンポーネントの境界を示し、ボーダー領域を含まないように調整されます (イン・セット)。
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- The position and size specify the bounds of the component, adjusted so as not to include the border area (the insets).
- 変更案
-- 位置とサイズはコンポーネントの境界を示し、ボーダー領域(インセット)を含まないように調整されます。

** このメソッドが [#vebb4610]
- 日本語: [https://docs.oracle.com/javase/jp/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- c - 対象の JComponent。このメソッドが null を返す場合は null
- 英語: [https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingUtilities.html#calculateInnerArea-javax.swing.JComponent-java.awt.Rectangle- SwingUtilities#calculateInnerArea(...)]
-- c - the JComponent in question; if null, this method returns null
- 変更案
-- c - 対象の JComponent。null の場合、このメソッドは null を返す

* コメント [#comment]
#comment
#comment

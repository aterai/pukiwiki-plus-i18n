---
category: swing
folder: LineHighlighter
title: JTextAreaに行ハイライトカーソルを表示
tags: [JTextArea, Caret, JViewport]
author: aterai
pubdate: 2006-07-24T09:46:55+09:00
description: JTextAreaのカーソルがある行をハイライト表示します。
image: https://lh3.googleusercontent.com/_9Z4BYR88imo/TQTPQ5j7_JI/AAAAAAAAAds/kbet-1O8x-A/s800/LineHighlighter.png
---
* 概要 [#summary]
`JTextArea`のカーソルがある行をハイライト表示します。

#download(https://lh3.googleusercontent.com/_9Z4BYR88imo/TQTPQ5j7_JI/AAAAAAAAAds/kbet-1O8x-A/s800/LineHighlighter.png)

* サンプルコード [#sourcecode]
#code(link){{
class HighlightCursorTextArea extends JTextArea {
  private static final Color linecolor = new Color(250, 250, 220);
  private final DefaultCaret caret;
  public HighlightCursorTextArea() {
    super();
    setOpaque(false);
    caret = new DefaultCaret() {
      @Override protected synchronized void damage(Rectangle r) {
        if (r != null) {
          JTextComponent c = getComponent();
          x = 0;
          y = r.y;
          width  = c.getSize().width;
          height = r.height;
          c.repaint();
        }
      }
    };
    caret.setBlinkRate(getCaret().getBlinkRate());
    setCaret(caret);
  }

  @Override protected void paintComponent(Graphics g) {
    Graphics2D g2 = (Graphics2D) g;
    Insets i = getInsets();
    int h = caret.height;
    int y = caret.y;
    g2.setPaint(linecolor);
    g2.fillRect(i.left, y, getSize().width - i.left - i.right, h);
    super.paintComponent(g);
  }
}
}}

* 解説 [#explanation]
[[JTextAreaに行カーソルを表示>Swing/LineCursor]]と同様のコードを使用していますが、行全体を塗り潰すために以下の`3`点を変更しています。

- `Viewport`の色を`scroll.getViewport().setBackground(Color.WHITE)`に変更
- `JTextArea#setOpaque(false)`で透明に設定
- `JTextArea#paintComponent(...)`のオーバーライドでカーソルのある行を塗りつぶしてから`super.paintComponent(g)`を実行

----
- [https://community.oracle.com/thread/1364121 Swing - Stretching background colour across whole JTextPane for one line of text]の Darryl.Burke さんのコードのように`BasicTextPaneUI#paintBackground(...)`メソッドをオーバーライドする方法もある

#code{{
// https://community.oracle.com/thread/1364121
// Swing - Stretching background colour across whole JTextPane for one line of text
// JTextPane textPane = new JTextPane();
// textPane.setUI(new LineHighlightTextPaneUI(textPane));
class LineHighlightTextPaneUI extends BasicTextPaneUI {
  private final JTextPane tc;
  public LineHighlightTextPaneUI(JTextPane t) {
    tc = t;
    tc.addCaretListener(new CaretListener() {
      @Override public void caretUpdate(CaretEvent e) {
        tc.repaint();
      }
    });
  }

  @Override public void paintBackground(Graphics g) {
    super.paintBackground(g);
    try {
      Rectangle rect = modelToView(tc, tc.getCaretPosition());
      int y = rect.y;
      int h = rect.height;
      g.setColor(Color.YELLOW);
      g.fillRect(0, y, tc.getWidth(), h);
    } catch (BadLocationException ex) {
      ex.printStackTrace();
    }
  }
}
}}

- この場合、`JTextEditor`や`JTextPane`で行の高さが異なる場合でもハイライト可能

#ref(https://lh6.googleusercontent.com/_9Z4BYR88imo/TQTPTaywxYI/AAAAAAAAAdw/RIlfRHiC-JY/s800/LineHighlighter1.png)

* 参考リンク [#reference]
- [[JTextAreaに行カーソルを表示>Swing/LineCursor]]
- [https://community.oracle.com/thread/1364121 Swing - Stretching background colour across whole JTextPane for one line of text]

* コメント [#comment]
#comment
- 行の折り返しに対応しました。 -- &user(aterai); &new{2008-03-17 (月) 16:22:56};

#comment
